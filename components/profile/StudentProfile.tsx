import { ThemedText } from '@/components/ThemedText';
import { SettingsItem } from '@/components/profile/SettingsItem';
import { getThemeColors } from '@/constants/Colors';
import { Spacing } from '@/constants/DesignTokens';
import { useTheme } from '@/contexts/ThemeContext';
import { useResponsive } from '@/hooks/useResponsive';
import { Ionicons } from '@expo/vector-icons';
import { LinearGradient } from 'expo-linear-gradient';
import { router } from 'expo-router';
import React from 'react';
import { Alert, Modal, Pressable, ScrollView, Switch, View } from 'react-native';
import Animated, { FadeInDown, SlideInRight } from 'react-native-reanimated';
import { SafeAreaView } from 'react-native-safe-area-context';

interface StudentProfileProps {
  user: any;
  onLogout: () => void;
}

export const StudentProfile = React.memo(({ user, onLogout }: StudentProfileProps) => {
  const [notificationsEnabled, setNotificationsEnabled] = React.useState(true);
  const [notificationsModalVisible, setNotificationsModalVisible] = React.useState(false);
  const [notificationSettings, setNotificationSettings] = React.useState({
    push: true,
    email: true,
    sms: false,
    schedule: true,
    grades: true,
    news: true,
    events: true,
    assignments: false,
    sound: true,
    vibration: true,
  });
  
  const { theme, isDarkMode, setTheme } = useTheme();
  const colors = getThemeColors(isDarkMode);
  const { isSmallScreen, spacing, fontSize, isVerySmallScreen } = useResponsive();
  
  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω–∏—Ü–∏–∞–ª–æ–≤
  const getInitials = React.useCallback((firstName?: string, lastName?: string, username?: string): string => {
    if (firstName && lastName) {
      return `${firstName[0]}${lastName[0]}`.toUpperCase();
    }
    if (firstName) return firstName[0].toUpperCase();
    if (username) return username.slice(0, 2).toUpperCase();
    return '–°–¢';
  }, []);
  
  const displayInfo = React.useMemo(() => {
    // –ò—Å–ø–æ–ª—å–∑—É–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ LDAP –ø—Ä–æ—Ñ–∏–ª—è –µ—Å–ª–∏ –æ–Ω–∏ –µ—Å—Ç—å
    const ldapProfile = user.ldap_profile;
    const name = ldapProfile?.full_name || `${user.first_name} ${user.last_name}`.trim() || user.username;
    const groupName = ldapProfile?.group || user.student?.group?.name;
    const course = user.student?.course || 1;
    
    return {
      name,
      subtitle: groupName ? `–ì—Ä—É–ø–ø–∞ ${groupName} ‚Ä¢ ${course} –∫—É—Ä—Å` : '–°—Ç—É–¥–µ–Ω—Ç',
      roleColor: '#2563eb',
      initials: getInitials(user.first_name, user.last_name, user.username)
    };
  }, [user.first_name, user.last_name, user.username, user.student, user.ldap_profile, getInitials]);

  // –ü–æ–ª—É—á–∏—Ç—å –Ω–∞–∑–≤–∞–Ω–∏–µ —Ç–µ–∫—É—â–µ–π —Ç–µ–º—ã –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
  const getThemeDisplayName = React.useCallback(() => {
    switch (theme) {
      case 'light': return '–°–≤–µ—Ç–ª–∞—è';
      case 'dark': return '–¢–µ–º–Ω–∞—è';
      default: return '–°–≤–µ—Ç–ª–∞—è';
    }
  }, [theme]);

  // –ü–æ–∫–∞–∑–∞—Ç—å –¥–∏–∞–ª–æ–≥ –≤—ã–±–æ—Ä–∞ —Ç–µ–º—ã
  const showThemeSelector = React.useCallback(() => {
    Alert.alert(
      '–í—ã–±–µ—Ä–∏—Ç–µ —Ç–µ–º—É',
      '–ö–∞–∫—É—é —Ç–µ–º—É –≤—ã —Ö–æ—Ç–∏—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å?',
      [
        { 
          text: '–°–≤–µ—Ç–ª–∞—è', 
          onPress: () => {
            setTheme('light');
          }
        },
        { 
          text: 'üåô –¢–µ–º–Ω–∞—è', 
          onPress: () => {
            setTheme('dark');
          }
        },
        { text: '–û—Ç–º–µ–Ω–∞', style: 'cancel' },
      ],
      { cancelable: true }
    );
  }, [setTheme]);

  // –û–±–Ω–æ–≤–∏—Ç—å –∫–æ–Ω–∫—Ä–µ—Ç–Ω—É—é –Ω–∞—Å—Ç—Ä–æ–π–∫—É —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
  const updateNotificationSetting = React.useCallback((key: keyof typeof notificationSettings, value: boolean) => {
    setNotificationSettings(prev => ({
      ...prev,
      [key]: value
    }));
  }, []);

  // –ü–æ–∫–∞–∑–∞—Ç—å –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –Ω–∞—Å—Ç—Ä–æ–µ–∫ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
  const showNotificationsModal = React.useCallback(() => {
    setNotificationsModalVisible(true);
  }, []);

  const handleGradesPress = React.useCallback(() => {
    router.push('/(tabs)');
  }, []);

  const handleSchedulePress = React.useCallback(() => {
    router.push('/(tabs)/schedule');
  }, []);

  const handleAssignmentsPress = React.useCallback(() => {
    Alert.alert('–ó–∞–¥–∞–Ω–∏—è', '–†–∞–∑–¥–µ–ª —Å –∑–∞–¥–∞–Ω–∏—è–º–∏ –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–µ–Ω –≤ —Å–ª–µ–¥—É—é—â–∏—Ö –≤–µ—Ä—Å–∏—è—Ö');
  }, []);

  const handleLibraryPress = React.useCallback(() => {
    Alert.alert('–ë–∏–±–ª–∏–æ—Ç–µ–∫–∞', '–≠–ª–µ–∫—Ç—Ä–æ–Ω–Ω–∞—è –±–∏–±–ª–∏–æ—Ç–µ–∫–∞ –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–∞ –≤ —Å–ª–µ–¥—É—é—â–∏—Ö –≤–µ—Ä—Å–∏—è—Ö');
  }, []);

  const handleLanguagePress = React.useCallback(() => {
    Alert.alert('–Ø–∑—ã–∫', '–°–º–µ–Ω–∞ —è–∑—ã–∫–∞ –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–∞ –≤ —Å–ª–µ–¥—É—é—â–∏—Ö –≤–µ—Ä—Å–∏—è—Ö');
  }, []);

  const handlePrivacyPress = React.useCallback(() => {
    Alert.alert('–ö–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç—å', '–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–∏ –±—É–¥—É—Ç –¥–æ—Å—Ç—É–ø–Ω—ã –≤ —Å–ª–µ–¥—É—é—â–∏—Ö –≤–µ—Ä—Å–∏—è—Ö');
  }, []);

  const handleAboutPress = React.useCallback(() => {
    Alert.alert('–û –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏', 'TIUE App v1.0.0\n–ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –¥–ª—è —Å—Ç—É–¥–µ–Ω—Ç–æ–≤ —É–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç–∞');
  }, []);

  const handleThemeToggle = React.useCallback((value: boolean) => {
    setTheme(value ? 'dark' : 'light');
  }, [setTheme]);

  const handleSaveNotifications = React.useCallback(() => {
    setNotificationsModalVisible(false);
    Alert.alert('‚úÖ –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã', '–í–∞—à–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –æ–±–Ω–æ–≤–ª–µ–Ω—ã');
  }, []);

  const handleCloseModal = React.useCallback(() => {
    setNotificationsModalVisible(false);
  }, []);

  return (
    <>
      {/* –ö—Ä–∞—Å–∏–≤—ã–π –ø—Ä–æ—Ñ–∏–ª—å —Å—Ç—É–¥–µ–Ω—Ç–∞ */}
      <Animated.View entering={SlideInRight.duration(400)} style={{ marginTop: Spacing.m, marginBottom: Spacing.m }}>
        <View
          style={{
            borderRadius: 20,
            padding: Spacing.l,
            backgroundColor: isDarkMode ? 'rgba(255,255,255,0.08)' : 'rgba(255,255,255,0.95)',
            borderWidth: 1,
            borderColor: isDarkMode ? 'rgba(255,255,255,0.12)' : 'rgba(0,0,0,0.08)',
          }}
        >
          <View style={{ flexDirection: 'row', alignItems: 'center', marginBottom: Spacing.m }}>
            {/* –ö—Ä–∞—Å–∏–≤—ã–π –∞–≤–∞—Ç–∞—Ä */}
            <View
              style={{
                width: 70,
                height: 70,
                borderRadius: 35,
                marginRight: Spacing.m,
                overflow: 'hidden',
              }}
            >
              <LinearGradient
                colors={isDarkMode 
                  ? ['#4F46E5', '#7C3AED', '#1E293B'] 
                  : ['#6366F1', '#8B5CF6', '#EC4899']
                }
                start={{ x: 0, y: 0 }}
                end={{ x: 1, y: 1 }}
                style={{
                  width: 70,
                  height: 70,
                  justifyContent: 'center',
                  alignItems: 'center',
                }}
              >
                <ThemedText style={{
                  fontSize: 24,
                  color: 'white',
                }}>
                  {displayInfo.initials}
                </ThemedText>
              </LinearGradient>
            </View>
            
            <View style={{ flex: 1 }}>
              <ThemedText
              style={{
                fontSize: 20,
                lineHeight: 26, // –î–æ–±–∞–≤–ª—è–µ–º lineHeight —á—Ç–æ–±—ã —Ç–µ–∫—Å—Ç –Ω–µ –æ–±—Ä–µ–∑–∞–ª—Å—è
                color: isDarkMode ? '#FFFFFF' : '#1E293B',
                marginBottom: 4,
              }}
              >
                {displayInfo.name}
              </ThemedText>
              
              <ThemedText
                style={{
                  fontSize: 14,
                  color: isDarkMode ? '#94A3B8' : '#64748B',
                  marginBottom: 8,
                }}
              >
                {displayInfo.subtitle}
              </ThemedText>

              {/* –ö—Ä–∞—Å–∏–≤—ã–µ —á–∏–ø—ã */}
              {!!user?.student && (
                <View style={{ flexDirection: 'row', gap: 8 }}>
                  {!!user.student?.group?.name && (
                    <View style={{ 
                      backgroundColor: isDarkMode ? '#6366F1' : '#6366F1',
                      paddingHorizontal: 10, 
                      paddingVertical: 4, 
                      borderRadius: 14,
                    }}>
                      <ThemedText style={{ fontSize: 12, color: 'white' }}>
                        {user.student.group.name}
                      </ThemedText>
                    </View>
                  )}
                  {!!user.student?.course && (
                    <View style={{ 
                      backgroundColor: isDarkMode ? '#8B5CF6' : '#8B5CF6',
                      paddingHorizontal: 10, 
                      paddingVertical: 4, 
                      borderRadius: 14,
                    }}>
                      <ThemedText style={{ fontSize: 12, color: 'white' }}>
                        {user.student.course} –∫—É—Ä—Å
                      </ThemedText>
                    </View>
                  )}
                </View>
              )}
            </View>
          </View>

          {/* –ö—Ä–∞—Å–∏–≤–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ */}
          <View style={{ 
            flexDirection: 'row', 
            backgroundColor: isDarkMode ? 'rgba(255,255,255,0.05)' : 'rgba(99,102,241,0.05)',
            borderRadius: 16,
            padding: Spacing.m,
            gap: 12,
            borderWidth: 1,
            borderColor: isDarkMode ? 'rgba(255,255,255,0.08)' : 'rgba(99,102,241,0.1)',
          }}>
            <View style={{ alignItems: 'center', flex: 1 }}>
              <View style={{
                width: 36,
                height: 36,
                borderRadius: 18,
                backgroundColor: isDarkMode ? '#6366F1' : '#8B5CF6',
                justifyContent: 'center',
                alignItems: 'center',
                marginBottom: 4,
              }}>
                <ThemedText style={{ color: 'white', fontSize: 13 }}>
                  4.2
                </ThemedText>
              </View>
              <ThemedText style={{ fontSize: 11, color: isDarkMode ? '#94A3B8' : '#64748B', textAlign: 'center' }}>
                –°—Ä–µ–¥–Ω–∏–π –±–∞–ª–ª
              </ThemedText>
            </View>
            
            <View style={{ alignItems: 'center', flex: 1 }}>
              <View style={{
                width: 36,
                height: 36,
                borderRadius: 18,
                backgroundColor: isDarkMode ? '#8B5CF6' : '#EC4899',
                justifyContent: 'center',
                alignItems: 'center',
                marginBottom: 4,
              }}>
                <ThemedText style={{ color: 'white', fontSize: 13 }}>
                  12
                </ThemedText>
              </View>
              <ThemedText style={{ fontSize: 11, color: isDarkMode ? '#94A3B8' : '#64748B', textAlign: 'center' }}>
                –ü—Ä–µ–¥–º–µ—Ç–æ–≤
              </ThemedText>
            </View>
            
            <View style={{ alignItems: 'center', flex: 1 }}>
              <View style={{
                width: 36,
                height: 36,
                borderRadius: 18,
                backgroundColor: isDarkMode ? '#EC4899' : '#6366F1',
                justifyContent: 'center',
                alignItems: 'center',
                marginBottom: 4,
              }}>
                <ThemedText style={{ color: 'white', fontSize: 13 }}>
                  87%
                </ThemedText>
              </View>
              <ThemedText style={{ fontSize: 11, color: isDarkMode ? '#94A3B8' : '#64748B', textAlign: 'center' }}>
                –ü–æ—Å–µ—â–∞–µ–º–æ—Å—Ç—å
              </ThemedText>
            </View>
          </View>
        </View>
      </Animated.View>

      {/* –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –∏–∑ LDAP –ø—Ä–æ—Ñ–∏–ª—è */}
      {user.ldap_profile && (
        <Animated.View entering={FadeInDown.duration(500).delay(150)} style={{ marginTop: Spacing.l }}>
          <ThemedText style={{ 
            fontSize: 18, 
            color: isDarkMode ? '#FFFFFF' : '#1E293B',
            marginBottom: Spacing.m,
            marginLeft: 4,
          }}>
            –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å—Ç—É–¥–µ–Ω—Ç–µ
          </ThemedText>
          
          <View style={{
            borderRadius: 16,
            backgroundColor: isDarkMode ? 'rgba(255,255,255,0.05)' : 'rgba(255,255,255,0.8)',
            borderWidth: 1,
            borderColor: isDarkMode ? 'rgba(255,255,255,0.1)' : 'rgba(0,0,0,0.06)',
            padding: Spacing.m,
          }}>
            {/* –û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è */}
            {user.ldap_profile.jshr && (
              <View style={{ flexDirection: 'row', justifyContent: 'space-between', marginBottom: 12 }}>
                <ThemedText style={{ color: isDarkMode ? '#94A3B8' : '#64748B', fontSize: 14 }}>
                  JSHR:
                </ThemedText>
                <ThemedText style={{ color: isDarkMode ? '#FFFFFF' : '#1E293B', fontSize: 14, fontWeight: '500' }}>
                  {user.ldap_profile.jshr}
                </ThemedText>
              </View>
            )}
            
            {user.ldap_profile.birthday && (
              <View style={{ flexDirection: 'row', justifyContent: 'space-between', marginBottom: 12 }}>
                <ThemedText style={{ color: isDarkMode ? '#94A3B8' : '#64748B', fontSize: 14 }}>
                  –î–∞—Ç–∞ —Ä–æ–∂–¥–µ–Ω–∏—è:
                </ThemedText>
                <ThemedText style={{ color: isDarkMode ? '#FFFFFF' : '#1E293B', fontSize: 14, fontWeight: '500' }}>
                  {user.ldap_profile.birthday}
                </ThemedText>
              </View>
            )}
            
            {user.ldap_profile.phone && (
              <View style={{ flexDirection: 'row', justifyContent: 'space-between', marginBottom: 12 }}>
                <ThemedText style={{ color: isDarkMode ? '#94A3B8' : '#64748B', fontSize: 14 }}>
                  –¢–µ–ª–µ—Ñ–æ–Ω:
                </ThemedText>
                <ThemedText style={{ color: isDarkMode ? '#FFFFFF' : '#1E293B', fontSize: 14, fontWeight: '500' }}>
                  {user.ldap_profile.phone}
                </ThemedText>
              </View>
            )}
            
            {user.ldap_profile.yonalishCon && (
              <View style={{ flexDirection: 'row', justifyContent: 'space-between', marginBottom: 12 }}>
                <ThemedText style={{ color: isDarkMode ? '#94A3B8' : '#64748B', fontSize: 14 }}>
                  –°–ø–µ—Ü–∏–∞–ª—å–Ω–æ—Å—Ç—å:
                </ThemedText>
                <ThemedText style={{ color: isDarkMode ? '#FFFFFF' : '#1E293B', fontSize: 14, fontWeight: '500', textAlign: 'right', flex: 1, marginLeft: 8 }}>
                  {user.ldap_profile.yonalishCon}
                </ThemedText>
              </View>
            )}
            
            {user.ldap_profile.degree && (
              <View style={{ flexDirection: 'row', justifyContent: 'space-between', marginBottom: 12 }}>
                <ThemedText style={{ color: isDarkMode ? '#94A3B8' : '#64748B', fontSize: 14 }}>
                  –°—Ç–µ–ø–µ–Ω—å:
                </ThemedText>
                <ThemedText style={{ color: isDarkMode ? '#FFFFFF' : '#1E293B', fontSize: 14, fontWeight: '500' }}>
                  {user.ldap_profile.degree}
                </ThemedText>
              </View>
            )}
            
            {user.ldap_profile.talim && (
              <View style={{ flexDirection: 'row', justifyContent: 'space-between', marginBottom: 12 }}>
                <ThemedText style={{ color: isDarkMode ? '#94A3B8' : '#64748B', fontSize: 14 }}>
                  –§–æ—Ä–º–∞ –æ–±—É—á–µ–Ω–∏—è:
                </ThemedText>
                <ThemedText style={{ color: isDarkMode ? '#FFFFFF' : '#1E293B', fontSize: 14, fontWeight: '500', textAlign: 'right', flex: 1, marginLeft: 8 }}>
                  {user.ldap_profile.talim}
                </ThemedText>
              </View>
            )}
            
            {user.ldap_profile.talimcon && (
              <View style={{ flexDirection: 'row', justifyContent: 'space-between', marginBottom: 12 }}>
                <ThemedText style={{ color: isDarkMode ? '#94A3B8' : '#64748B', fontSize: 14 }}>
                  –Ø–∑—ã–∫ –æ–±—É—á–µ–Ω–∏—è:
                </ThemedText>
                <ThemedText style={{ color: isDarkMode ? '#FFFFFF' : '#1E293B', fontSize: 14, fontWeight: '500' }}>
                  {user.ldap_profile.talimcon}
                </ThemedText>
              </View>
            )}
            
            {user.ldap_profile.length && (
              <View style={{ flexDirection: 'row', justifyContent: 'space-between', marginBottom: 12 }}>
                <ThemedText style={{ color: isDarkMode ? '#94A3B8' : '#64748B', fontSize: 14 }}>
                  –î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å:
                </ThemedText>
                <ThemedText style={{ color: isDarkMode ? '#FFFFFF' : '#1E293B', fontSize: 14, fontWeight: '500' }}>
                  {user.ldap_profile.length}
                </ThemedText>
              </View>
            )}
            
            {user.ldap_profile.admdate && (
              <View style={{ flexDirection: 'row', justifyContent: 'space-between', marginBottom: 12 }}>
                <ThemedText style={{ color: isDarkMode ? '#94A3B8' : '#64748B', fontSize: 14 }}>
                  –î–∞—Ç–∞ –ø–æ—Å—Ç—É–ø–ª–µ–Ω–∏—è:
                </ThemedText>
                <ThemedText style={{ color: isDarkMode ? '#FFFFFF' : '#1E293B', fontSize: 14, fontWeight: '500', textAlign: 'right', flex: 1, marginLeft: 8 }}>
                  {user.ldap_profile.admdate}
                </ThemedText>
              </View>
            )}
            
            {user.ldap_profile.yearofgraduation && (
              <View style={{ flexDirection: 'row', justifyContent: 'space-between' }}>
                <ThemedText style={{ color: isDarkMode ? '#94A3B8' : '#64748B', fontSize: 14 }}>
                  –ì–æ–¥ –æ–∫–æ–Ω—á–∞–Ω–∏—è:
                </ThemedText>
                <ThemedText style={{ color: isDarkMode ? '#FFFFFF' : '#1E293B', fontSize: 14, fontWeight: '500' }}>
                  {user.ldap_profile.yearofgraduation}
                </ThemedText>
              </View>
            )}
          </View>
        </Animated.View>
      )}

      {/* –£—Å–ø–µ–≤–∞–µ–º–æ—Å—Ç—å */}
      <Animated.View entering={FadeInDown.duration(500).delay(200)} style={{ marginTop: Spacing.l }}>
        <ThemedText style={{ 
          fontSize: 18, 
          color: isDarkMode ? '#FFFFFF' : '#000000', 
          marginBottom: Spacing.m,
          marginLeft: 4,
        }}>
          –£—Å–ø–µ–≤–∞–µ–º–æ—Å—Ç—å
        </ThemedText>
        
        <SettingsItem
          title="–û—Ü–µ–Ω–∫–∏"
          subtitle="–¢–µ–∫—É—â–∏–µ –æ—Ü–µ–Ω–∫–∏ –ø–æ –ø—Ä–µ–¥–º–µ—Ç–∞–º"
          icon="school-outline"
          onPress={handleGradesPress}
        />
        
        <SettingsItem
          title="–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ"
          subtitle="–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –∑–∞–Ω—è—Ç–∏–π"
          icon="calendar-outline"
          onPress={handleSchedulePress}
        />
        
        <SettingsItem
          title="–ó–∞–¥–∞–Ω–∏—è"
          subtitle="–î–æ–º–∞—à–Ω–∏–µ –∑–∞–¥–∞–Ω–∏—è –∏ –ø—Ä–æ–µ–∫—Ç—ã"
          icon="clipboard-outline"
          onPress={handleAssignmentsPress}
        />

        <SettingsItem
          title="–ë–∏–±–ª–∏–æ—Ç–µ–∫–∞"
          subtitle="–£—á–µ–±–Ω—ã–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã –∏ —Ä–µ—Å—É—Ä—Å—ã"
          icon="library-outline"
          onPress={handleLibraryPress}
        />
      </Animated.View>

      {/* –ù–∞—Å—Ç—Ä–æ–π–∫–∏ */}
      <Animated.View entering={FadeInDown.duration(500).delay(300)} style={{ marginTop: Spacing.l }}>
        <ThemedText style={{ 
          fontSize: 18, 
          color: isDarkMode ? '#FFFFFF' : '#000000', 
          marginBottom: Spacing.m,
          marginLeft: 4,
        }}>
          –ù–∞—Å—Ç—Ä–æ–π–∫–∏
        </ThemedText>
        
        <SettingsItem
          title="–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è"
          subtitle="Push-—É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –∏ –∑–≤—É–∫–∏"
          icon="notifications-outline"
          onPress={showNotificationsModal}
          rightComponent={
            <Switch 
              value={notificationsEnabled} 
              onValueChange={setNotificationsEnabled}
              trackColor={{ 
                false: isDarkMode ? '#374151' : '#E5E7EB', 
                true: isDarkMode ? '#6366F1' : '#8B5CF6' 
              }}
              thumbColor={notificationsEnabled ? '#ffffff' : '#ffffff'}
              style={{ transform: [{ scaleX: 0.9 }, { scaleY: 0.9 }] }}
            />
          }
        />
        
        <SettingsItem
          title="–¢–µ–º–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è"
          subtitle={getThemeDisplayName()}
          icon="moon-outline"
          onPress={showThemeSelector}
          rightComponent={
            <Switch
              value={isDarkMode}
              onValueChange={handleThemeToggle}
              trackColor={{ 
                false: isDarkMode ? '#374151' : '#E5E7EB', 
                true: isDarkMode ? '#6366F1' : '#8B5CF6' 
              }}
              thumbColor={isDarkMode ? '#ffffff' : '#ffffff'}
              style={{ transform: [{ scaleX: 0.9 }, { scaleY: 0.9 }] }}
            />
          }
        />

        <SettingsItem
          title="–Ø–∑—ã–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è"
          subtitle="–†—É—Å—Å–∫–∏–π"
          icon="language-outline"
          onPress={handleLanguagePress}
        />

        <SettingsItem
          title="–ö–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç—å"
          subtitle="–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã–º–∏"
          icon="shield-checkmark-outline"
          onPress={handlePrivacyPress}
        />
        
        <SettingsItem
          title="–û –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏"
          subtitle="–í–µ—Ä—Å–∏—è 1.0.0"
          icon="information-circle-outline"
          onPress={handleAboutPress}
        />
      </Animated.View>

      {/* –ö–æ–º–ø–∞–∫—Ç–Ω–∞—è –∫–Ω–æ–ø–∫–∞ –≤—ã—Ö–æ–¥–∞ */}
      <Animated.View entering={FadeInDown.duration(500).delay(400)} style={{ 
        marginTop: isVerySmallScreen ? spacing.md : isSmallScreen ? spacing.lg : Spacing.l 
      }}>
        <Pressable
          onPress={onLogout}
          style={({ pressed }) => ({
            backgroundColor: pressed ? '#DC2626' : '#EF4444',
            borderRadius: isVerySmallScreen ? 10 : isSmallScreen ? 11 : 12,
            padding: isVerySmallScreen ? spacing.sm : isSmallScreen ? spacing.md : Spacing.m,
            flexDirection: 'row',
            alignItems: 'center',
            justifyContent: 'center',
            marginBottom: isVerySmallScreen ? spacing.md : isSmallScreen ? spacing.lg : Spacing.l,
            borderWidth: 1,
            borderColor: pressed ? '#B91C1C' : '#DC2626',
            opacity: pressed ? 0.9 : 1,
          })}
        >
          <Ionicons 
            name="log-out-outline" 
            size={isVerySmallScreen ? 16 : isSmallScreen ? 17 : 18} 
            color="white" 
            style={{ marginRight: isVerySmallScreen ? spacing.xs : isSmallScreen ? spacing.sm : Spacing.s }} 
          />
          <ThemedText style={{ 
            fontSize: isVerySmallScreen ? fontSize.body : isSmallScreen ? 14 : 15,
            color: 'white',
          }}>
            –í—ã–π—Ç–∏ –∏–∑ –∞–∫–∫–∞—É–Ω—Ç–∞
          </ThemedText>
        </Pressable>
      </Animated.View>

      {/* –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –Ω–∞—Å—Ç—Ä–æ–µ–∫ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π */}
      <Modal
        visible={notificationsModalVisible}
        animationType="slide"
        presentationStyle="pageSheet"
        onRequestClose={handleCloseModal}
      >
        <SafeAreaView style={{ flex: 1, backgroundColor: colors.background }}>
          {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ */}
          <View style={{
            flexDirection: 'row',
            alignItems: 'center',
            justifyContent: 'space-between',
            paddingHorizontal: Spacing.l,
            paddingVertical: Spacing.m,
            borderBottomWidth: 1,
            borderBottomColor: isDarkMode ? 'rgba(255,255,255,0.1)' : 'rgba(0,0,0,0.1)',
          }}>
            <ThemedText style={{
              fontSize: 20,
              color: isDarkMode ? '#FFFFFF' : '#1E293B',
            }}>
              üîî –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
            </ThemedText>
            <Pressable
              onPress={handleCloseModal}
              style={{
                width: 32,
                height: 32,
                borderRadius: 16,
                backgroundColor: isDarkMode ? 'rgba(255,255,255,0.1)' : 'rgba(0,0,0,0.05)',
                justifyContent: 'center',
                alignItems: 'center',
              }}
            >
              <Ionicons name="close" size={18} color={isDarkMode ? '#FFFFFF' : '#1E293B'} />
            </Pressable>
          </View>

          <ScrollView style={{ flex: 1 }} contentContainerStyle={{ 
            padding: Spacing.l 
          }}>
            {/* –û–±—â–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ */}
            <View style={{ marginBottom: Spacing.l }}>
              <ThemedText style={{
                fontSize: 16,
                color: isDarkMode ? '#F1F5F9' : '#374151',
                marginBottom: Spacing.m,
              }}>
                –û–±—â–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
              </ThemedText>

              <SettingsItem
                title="Push-—É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è"
                subtitle="–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –≤ —Å–∏—Å—Ç–µ–º–µ"
                icon="phone-portrait-outline"
                rightComponent={
                  <Switch
                    value={notificationSettings.push}
                    onValueChange={(value) => updateNotificationSetting('push', value)}
                    trackColor={{ 
                      false: isDarkMode ? '#374151' : '#E5E7EB', 
                      true: isDarkMode ? '#6366F1' : '#8B5CF6' 
                    }}
                    thumbColor={'#ffffff'}
                    style={{ transform: [{ scaleX: 0.9 }, { scaleY: 0.9 }] }}
                  />
                }
                showArrow={false}
              />

              <SettingsItem
                title="Email —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è"
                subtitle="–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –Ω–∞ –ø–æ—á—Ç—É"
                icon="mail-outline"
                rightComponent={
                  <Switch
                    value={notificationSettings.email}
                    onValueChange={(value) => updateNotificationSetting('email', value)}
                    trackColor={{ 
                      false: isDarkMode ? '#374151' : '#E5E7EB', 
                      true: isDarkMode ? '#6366F1' : '#8B5CF6' 
                    }}
                    thumbColor={'#ffffff'}
                    style={{ transform: [{ scaleX: 0.9 }, { scaleY: 0.9 }] }}
                  />
                }
                showArrow={false}
              />

              <SettingsItem
                title="SMS —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è"
                subtitle="–¢–µ–∫—Å—Ç–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è"
                icon="chatbubble-outline"
                rightComponent={
                  <Switch
                    value={notificationSettings.sms}
                    onValueChange={(value) => updateNotificationSetting('sms', value)}
                    trackColor={{ 
                      false: isDarkMode ? '#374151' : '#E5E7EB', 
                      true: isDarkMode ? '#6366F1' : '#8B5CF6' 
                    }}
                    thumbColor={'#ffffff'}
                    style={{ transform: [{ scaleX: 0.9 }, { scaleY: 0.9 }] }}
                  />
                }
                showArrow={false}
              />
            </View>

            {/* –¢–∏–ø—ã —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π */}
            <View style={{ marginBottom: Spacing.l }}>
              <ThemedText style={{
                fontSize: 16,
                color: isDarkMode ? '#F1F5F9' : '#374151',
                marginBottom: Spacing.m,
              }}>
                üìù –¢–∏–ø—ã —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
              </ThemedText>

              {[
                { key: 'schedule', title: '–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ', subtitle: '–ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è –æ –∑–∞–Ω—è—Ç–∏—è—Ö', icon: 'calendar-outline' as const },
                { key: 'grades', title: '–û—Ü–µ–Ω–∫–∏', subtitle: '–ù–æ–≤—ã–µ –æ—Ü–µ–Ω–∫–∏ –∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã', icon: 'school-outline' as const },
                { key: 'news', title: '–ù–æ–≤–æ—Å—Ç–∏', subtitle: '–£–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç—Å–∫–∏–µ –Ω–æ–≤–æ—Å—Ç–∏', icon: 'newspaper-outline' as const },
                { key: 'events', title: '–°–æ–±—ã—Ç–∏—è', subtitle: '–ú–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è –∏ —Å–æ–±—ã—Ç–∏—è', icon: 'flag-outline' as const },
                { key: 'assignments', title: '–ó–∞–¥–∞–Ω–∏—è', subtitle: '–î–æ–º–∞—à–Ω–∏–µ –∑–∞–¥–∞–Ω–∏—è', icon: 'clipboard-outline' as const },
              ].map(({ key, title, subtitle, icon }) => (
                <SettingsItem
                  key={key}
                  title={title}
                  subtitle={subtitle}
                  icon={icon}
                  rightComponent={
                    <Switch
                      value={notificationSettings[key as keyof typeof notificationSettings]}
                      onValueChange={(value) => updateNotificationSetting(key as keyof typeof notificationSettings, value)}
                      trackColor={{ 
                        false: isDarkMode ? '#374151' : '#E5E7EB', 
                        true: isDarkMode ? '#6366F1' : '#8B5CF6' 
                      }}
                      thumbColor={'#ffffff'}
                      style={{ transform: [{ scaleX: 0.9 }, { scaleY: 0.9 }] }}
                    />
                  }
                  showArrow={false}
                />
              ))}
            </View>

            {/* –ó–≤—É–∫–∏ –∏ –≤–∏–±—Ä–∞—Ü–∏—è */}
            <View style={{ marginBottom: Spacing.l }}>
              <ThemedText style={{
                fontSize: 16,
                color: isDarkMode ? '#F1F5F9' : '#374151',
                marginBottom: Spacing.m,
              }}>
                üîä –ó–≤—É–∫–∏ –∏ –≤–∏–±—Ä–∞—Ü–∏—è
              </ThemedText>

              <SettingsItem
                title="–ó–≤—É–∫ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π"
                subtitle="–ó–≤—É–∫–æ–≤—ã–µ —Å–∏–≥–Ω–∞–ª—ã"
                icon="volume-high-outline"
                rightComponent={
                  <Switch
                    value={notificationSettings.sound}
                    onValueChange={(value) => updateNotificationSetting('sound', value)}
                    trackColor={{ 
                      false: isDarkMode ? '#374151' : '#E5E7EB', 
                      true: isDarkMode ? '#6366F1' : '#8B5CF6' 
                    }}
                    thumbColor={'#ffffff'}
                    style={{ transform: [{ scaleX: 0.9 }, { scaleY: 0.9 }] }}
                  />
                }
                showArrow={false}
              />

              <SettingsItem
                title="–í–∏–±—Ä–∞—Ü–∏—è"
                subtitle="–¢–∞–∫—Ç–∏–ª—å–Ω–∞—è –æ–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å"
                icon="phone-portrait-outline"
                rightComponent={
                  <Switch
                    value={notificationSettings.vibration}
                    onValueChange={(value) => updateNotificationSetting('vibration', value)}
                    trackColor={{ 
                      false: isDarkMode ? '#374151' : '#E5E7EB', 
                      true: isDarkMode ? '#6366F1' : '#8B5CF6' 
                    }}
                    thumbColor={'#ffffff'}
                    style={{ transform: [{ scaleX: 0.9 }, { scaleY: 0.9 }] }}
                  />
                }
                showArrow={false}
              />
            </View>

            {/* –ö–Ω–æ–ø–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–∫ */}
            <Pressable
              onPress={handleSaveNotifications}
              style={({ pressed }) => ({
                backgroundColor: pressed ? '#5B5CF6' : '#6366F1',
                borderRadius: 12,
                padding: Spacing.l,
                flexDirection: 'row',
                alignItems: 'center',
                justifyContent: 'center',
                marginBottom: Spacing.xl,
                opacity: pressed ? 0.9 : 1,
              })}
            >
              <Ionicons name="checkmark-circle-outline" size={20} color="white" style={{ marginRight: Spacing.s }} />
              <ThemedText style={{
                fontSize: 16,
                color: 'white',
              }}>
                –°–æ—Ö—Ä–∞–Ω–∏—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
              </ThemedText>
            </Pressable>
          </ScrollView>
        </SafeAreaView>
      </Modal>
    </>
  );
});

StudentProfile.displayName = 'StudentProfile';