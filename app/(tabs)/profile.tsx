import AsyncStorage from '@react-native-async-storage/async-storage';
import { router } from 'expo-router';
import React from 'react';
import { Platform, ScrollView, View } from 'react-native';
import { useSafeAreaInsets } from 'react-native-safe-area-context';

import { ConfirmationModal } from '@/components/ConfirmationModal';
import { AdminProfile } from '@/components/profile/AdminProfile';
import { StudentProfile } from '@/components/profile/StudentProfile';
import { getThemeColors } from '@/constants/Colors';
import { useTheme } from '@/contexts/ThemeContext';
import { useAppDispatch, useAppSelector } from '@/hooks/redux';
import { useResponsive } from '@/hooks/useResponsive';
import { clearCredentials, logoutUser } from '@/store/slices/authSlice';

export default function ProfileScreen() {
  const dispatch = useAppDispatch();
  const { user } = useAppSelector((state) => state.auth);
  const { isDarkMode } = useTheme();
  const colors = getThemeColors(isDarkMode);
  const insets = useSafeAreaInsets();
  const { isSmallScreen, spacing, isVerySmallScreen } = useResponsive();
  const [isLogoutModalVisible, setIsLogoutModalVisible] = React.useState(false);
  
  // Ref –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è —Ä–∞–∑–º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞
  const isMountedRef = React.useRef(true);

  // Cleanup –ø—Ä–∏ —Ä–∞–∑–º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏
  React.useEffect(() => {
    return () => {
      isMountedRef.current = false;
    };
  }, []);

  const handleLogout = React.useCallback(async () => {
    console.log('üö™ handleLogout called!');
    if (isMountedRef.current) {
      setIsLogoutModalVisible(true);
    }
  }, []);

  const performLogout = React.useCallback(async () => {
    console.log('‚úÖ Starting logout process...');
    
    // –ó–∞–∫—Ä—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ —Å—Ä–∞–∑—É
    if (isMountedRef.current) {
      setIsLogoutModalVisible(false);
    }
    
    try {
      console.log('üîÑ Calling logoutUser...');
      await dispatch(logoutUser()).unwrap();
      
      console.log('üóëÔ∏è Clearing AsyncStorage...');
      await AsyncStorage.multiRemove(['userToken', 'userRole', 'userData']);
      
      console.log('üßπ Clearing Redux credentials...');
      dispatch(clearCredentials());
      
      console.log('üîÑ Navigating to login...');
      router.replace('/login');
      
      console.log('‚úÖ Logout completed successfully!');
    } catch (error) {
      console.error('‚ùå Logout error:', error);
      // –ü—Ä–∏ –æ—à–∏–±–∫–µ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç –µ—â–µ —Å–º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω
      if (isMountedRef.current) {
        // –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –ø–æ–∫–∞–∑ –æ—à–∏–±–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
        console.error('–ù–µ —É–¥–∞–ª–æ—Å—å –≤—ã–π—Ç–∏ –∏–∑ —Å–∏—Å—Ç–µ–º—ã');
      }
    }
  }, [dispatch]);

  const handleCancelLogout = React.useCallback(() => {
    console.log('‚ùå Logout cancelled');
    if (isMountedRef.current) {
      setIsLogoutModalVisible(false);
    }
  }, []);

  // –†–∞–Ω–Ω–∏–π –≤–æ–∑–≤—Ä–∞—Ç –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ—Ç
  if (!user) {
    return null;
  }

  return (
    <View style={{ flex: 1, backgroundColor: colors.background }}>
      <ScrollView
        showsVerticalScrollIndicator={false}
        style={{ backgroundColor: colors.background }}
        contentContainerStyle={{
          paddingHorizontal: isVerySmallScreen ? spacing.sm : isSmallScreen ? spacing.md : spacing.lg,
          paddingBottom: Platform.OS === 'android'
            ? (isVerySmallScreen ? 80 : isSmallScreen ? 85 : 90) // –ö–æ–º–ø–∞–∫—Ç–Ω—ã–µ –æ—Ç—Å—Ç—É–ø—ã –¥–ª—è Android
            : (isVerySmallScreen ? 140 : isSmallScreen ? 150 : 160), // –û–±—ã—á–Ω—ã–µ –¥–ª—è iOS
          paddingTop: isVerySmallScreen ? spacing.xs : isSmallScreen ? spacing.sm : spacing.md,
        }}
      >
        {/* –†–µ–Ω–¥–µ—Ä–∏–º —Ä–∞–∑–Ω—ã–µ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ä–æ–ª–∏ */}
        {user.role === 'admin' ? (
          <AdminProfile user={user} onLogout={handleLogout} />
        ) : (
          <StudentProfile user={user} onLogout={handleLogout} />
        )}
      </ScrollView>

      {/* –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –≤—ã—Ö–æ–¥–∞ */}
      <ConfirmationModal
        isVisible={isLogoutModalVisible}
        title="–í—ã–π—Ç–∏ –∏–∑ –∞–∫–∫–∞—É–Ω—Ç–∞"
        message="–í—ã –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ —Ö–æ—Ç–∏—Ç–µ –≤—ã–π—Ç–∏ –∏–∑ —Å–∏—Å—Ç–µ–º—ã?"
        confirmText="–í—ã–π—Ç–∏"
        cancelText="–û—Ç–º–µ–Ω–∞"
        onConfirm={performLogout}
        onCancel={handleCancelLogout}
        isDangerous={true}
      />
    </View>
  );
}