"""
Django settings for tiuebackend project.

Generated by 'django-admin startproject' using Django 5.2.6.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""

from pathlib import Path
from decouple import config
import pymysql

# Install PyMySQL as MySQL driver
pymysql.install_as_MySQLdb()

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = config('SECRET_KEY', default='django-insecure-ih8*8x#9kf=@0s7ry9$2u$&85zrb^3@p3f_hw(b7@2vrx_$sfa')

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = config('DEBUG', default=True, cast=bool)

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–ª—è ngrok –∏ –ø—Ä–æ–¥–∞–∫—à–Ω - —á–∏—Ç–∞–µ–º –∏–∑ .env
# –ë–∞–∑–æ–≤—ã–µ —Ö–æ—Å—Ç—ã
base_hosts = [
    'localhost',
    '127.0.0.1',
    '0.0.0.0',
]

# –ß–∏—Ç–∞–µ–º –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Ö–æ—Å—Ç—ã –∏–∑ .env —Ñ–∞–π–ª–∞
env_hosts = config('ALLOWED_HOSTS', default='').split(',')
env_hosts = [host.strip() for host in env_hosts if host.strip()]  # –£–±–∏—Ä–∞–µ–º –ø—É—Å—Ç—ã–µ —Å—Ç—Ä–æ–∫–∏

# –û–±—ä–µ–¥–∏–Ω—è–µ–º –≤—Å–µ —Ö–æ—Å—Ç—ã
ALLOWED_HOSTS = base_hosts + env_hosts

print(f"üîß ALLOWED_HOSTS: {ALLOWED_HOSTS}")  # –î–ª—è –æ—Ç–ª–∞–¥–∫–∏


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'rest_framework',
    'rest_framework.authtoken',
    'corsheaders',
    'authentication',
    'users',
    'groups',
    'schedule',
    'news',
]

MIDDLEWARE = [
    'tiuebackend.cors_middleware.CorsMiddleware',  # –ù–∞—à –∫–∞—Å—Ç–æ–º–Ω—ã–π CORS middleware
    'tiuebackend.middleware.LoggingMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    # 'django.middleware.csrf.CsrfViewMiddleware',  # –í—Ä–µ–º–µ–Ω–Ω–æ –æ—Ç–∫–ª—é—á–∞–µ–º CSRF –¥–ª—è API
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'tiuebackend.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'tiuebackend.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': 'tiueapp_db',
        'USER': 'scroll_db_user',
        'PASSWORD': '1435511926Ss',
        'HOST': 'localhost',
        'PORT': '3306',
        'OPTIONS': {
            'init_command': "SET sql_mode='STRICT_TRANS_TABLES,NO_ZERO_DATE,NO_ZERO_IN_DATE,ERROR_FOR_DIVISION_BY_ZERO'",
            'charset': 'utf8mb4',
            'use_unicode': True,
            'autocommit': True,
            'isolation_level': None,
        },
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/

LANGUAGE_CODE = 'ru-ru'

TIME_ZONE = 'Europe/Moscow'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/

STATIC_URL = 'static/'
STATIC_ROOT = BASE_DIR / 'staticfiles'

# Media files (uploads)
MEDIA_URL = '/media/'
MEDIA_ROOT = BASE_DIR / 'media'

# –°–æ–∑–¥–∞–µ–º –ø–∞–ø–∫–∏ –¥–ª—è –º–µ–¥–∏–∞—Ñ–∞–π–ª–æ–≤ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ
import os
media_folders = ['news', 'events']
for folder in media_folders:
    folder_path = os.path.join(MEDIA_ROOT, folder)
    os.makedirs(folder_path, exist_ok=True)

# Base URL for absolute image URLs (fallback)
# Prefer explicit env var `BASE_URL`. Default set to current ngrok tunnel.
BASE_URL = config('BASE_URL', default='https://d40d84efd1a8.ngrok-free.app')  # –û–±–Ω–æ–≤–ª—è–π—Ç–µ —Å —Ç–µ–∫—É—â–∏–º ngrok URL

# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# Django REST Framework
REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': [
        'rest_framework.authentication.TokenAuthentication',
    ],
    'DEFAULT_PERMISSION_CLASSES': [
        'rest_framework.permissions.IsAuthenticated',
    ],
    'DEFAULT_PAGINATION_CLASS': 'rest_framework.pagination.PageNumberPagination',
    'PAGE_SIZE': 20,
}

# CORS Settings - —Ç–µ–ø–µ—Ä—å –∏—Å–ø–æ–ª—å–∑—É–µ–º –∫–∞—Å—Ç–æ–º–Ω—ã–π middleware
# CORS_ALLOW_ALL_ORIGINS = True  # –†–∞–∑—Ä–µ—à–∞–µ–º –≤—Å–µ –¥–æ–º–µ–Ω—ã
# CORS_ALLOW_CREDENTIALS = True
# CORS_ALLOW_ALL_HEADERS = True  # –†–∞–∑—Ä–µ—à–∞–µ–º –≤—Å–µ –∑–∞–≥–æ–ª–æ–≤–∫–∏
# CORS_PREFLIGHT_MAX_AGE = 86400  # –ö–µ—à–∏—Ä—É–µ–º preflight –∑–∞–ø—Ä–æ—Å—ã
# 
# # –†–∞–∑—Ä–µ—à–µ–Ω–Ω—ã–µ –¥–æ–º–µ–Ω—ã (—Ç–æ–ª—å–∫–æ –¥–ª—è –ª–æ–≥–≥–∏—Ä–æ–≤–∞–Ω–∏—è)
# CORS_ALLOWED_ORIGINS = [
#     'http://localhost:8081',
#     'http://127.0.0.1:8081',
#     'http://localhost:3000',
#     'http://127.0.0.1:3000',
# ]
# 
# # –†–∞–∑—Ä–µ—à–∞–µ–º –≤—Å–µ –º–µ—Ç–æ–¥—ã
# CORS_ALLOWED_METHODS = [
#     'DELETE',
#     'GET',
#     'OPTIONS',
#     'PATCH',
#     'POST',
#     'PUT',
#     'HEAD',
# ]
# 
# # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–ª—è —É–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç–∏
# CORS_ALLOW_PRIVATE_NETWORK = True

# Custom User Model (we'll create it)
AUTH_USER_MODEL = 'users.CustomUser'

# Default Admin Settings
DEFAULT_ADMIN_EMAIL = config('DEFAULT_ADMIN_EMAIL', default='admin@tiue.uz')
DEFAULT_ADMIN_PASSWORD = config('DEFAULT_ADMIN_PASSWORD', default='admin123')
DEFAULT_ADMIN_NAME = config('DEFAULT_ADMIN_NAME', default='–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä')

# –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'formatters': {
        'verbose': {
            'format': '{levelname} {asctime} {module} {process:d} {thread:d} {message}',
            'style': '{',
        },
        'simple': {
            'format': '{levelname} {message}',
            'style': '{',
        },
    },
    'handlers': {
        'console': {
            'class': 'logging.StreamHandler',
            'formatter': 'simple',
        },
    },
    'loggers': {
        'django': {
            'handlers': ['console'],
            'level': 'INFO',
            'propagate': False,
        },
        'tiuebackend.middleware': {
            'handlers': ['console'],
            'level': 'INFO',
            'propagate': False,
        },
    },
    'root': {
        'handlers': ['console'],
        'level': 'WARNING',
    },
}
